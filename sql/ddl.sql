drop table if exist member CASCADE;
create table member
(
    id bigint generated by default as identity,
    name varchar(255),
    primary key(id)
);

create table member
(
    id bigint NOT NULL auto_increment,
    name varchar(255),
    primary key(id)
);


-- netiscloud.tblicensepolicy definition

CREATE TABLE `tblicensepolicy` (
  `licensepolicyid` varchar(36) NOT NULL COMMENT '라이센스정책관리번호(uuid)',
  `solutioncode` varchar(6) NOT NULL COMMENT '솔루션코드(groupcode:002)',
  `policycode` varchar(6) NOT NULL COMMENT '라이센스등급(groupcode:001)',
  `solutionname` varchar(50) NOT NULL COMMENT '라이센스정책솔루션명',
  `policyname` varchar(50) NOT NULL COMMENT '라이센스정책명',
  `licensecontent` text NOT NULL COMMENT '라이센스정책내용',
  `licenseamount` varchar(15) NOT NULL COMMENT '라이센스기본요금',
  `licenseint` int(4) NOT NULL COMMENT '라이센스가용장비수',
  `aidcode` varchar(6) NOT NULL COMMENT '지원기능구분(003)',
  `stdate` varchar(8) NOT NULL DEFAULT date_format(curdate(),'%Y%m%d') COMMENT '시작일자',
  `eddate` varchar(8) NOT NULL DEFAULT '21991231' COMMENT '종료일자',
  `useyn` varchar(1) NOT NULL DEFAULT '1' COMMENT '사용여부',
  `sortno` tinyint(1) NOT NULL COMMENT '정렬기준',
  `createdAt` datetime NOT NULL DEFAULT current_timestamp() COMMENT '등록일시',
  `updatedAt` datetime NOT NULL DEFAULT current_timestamp() COMMENT '수정일시',
  PRIMARY KEY (`licensepolicyid`),
  KEY `IDX_tbpricepolicy_001` (`policycode`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='라이센스정책관리';

-- tbmember cloudgrade column 변경 -> licensegrade
ALTER TABLE tbmember CHANGE cloudgrade licensegrade VARCHAR(06);
-- tbmember column 추가 -> administratoryn
ALTER TABLE tbmember ADD COLUMN administratoryn VARCHAR(1) AFTER emailcertificationyn;



CREATE TABLE `tbusedevice` (
  `tbusedeviceid` varchar(36) NOT NULL COMMENT '사용자아이디',
  `user_id` varchar(50) NOT NULL COMMENT '사용자아이디',
  `useday` varchar(8) NOT NULL COMMENT '사용일자',
  `tran_status` int(1) NOT NULL COMMENT '처리여부',
  `info` varchar(100) NOT NULL COMMENT '장비정보',
  `nms_count` int(4) NOT NULL COMMENT '네트워크 장비 대수',
  `sms_count` int(4) NOT NULL COMMENT 'sms 장비 대수',
  `dbms_count` int(4) NOT NULL COMMENT 'dbms 장비 대수',
  `ap_count` int(4) NOT NULL COMMENT 'ap 장비 대수',
  `fms_count` int(4) NOT NULL COMMENT 'fms 장비 대수',
  `reason` varchar(8) NOT NULL COMMENT '결과 사용',
  PRIMARY KEY (`tbusedeviceid`),
  KEY `IDX_tbusedevice_001` (`user_id`,`useday`),
  CONSTRAINT `tbusedevice_user_id_FK` FOREIGN KEY (`user_id`) REFERENCES `tbmember` (`email`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_general_ci COMMENT='사용자등록장비';


<select id="login" resultType="Member">
    select * from tbmember
    where email=#{uid} and password=SHA2(#{upw},256)
</select>

alter table tbmember add column sessionkey varchar(50) not null default 'none' COMMENT '로그인 세션 아이디';
alter table tbmember add column sessionlimit timestamp COMMENT '아이디 저장 만료 기간';

ALTER TABLE tbtaxinformation ADD COLUMN companyname VARCHAR(50) AFTER email COMMENT '법인(회사)명';


/* 2023.08.31 추가 */
alter table tbmember add column administratoryn varchar(1) DEFAULT 'N' COMMENT '관리자여부(groupcode=999) 사업자등록번호가 하몬인경우',


implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

/* 2023.09.4 추가 */
alter table tbmember add column serverdomainname varchar(100) null default '' COMMENT '회원접속도메인';



drop table `tbaidfunction`;


CREATE TABLE `tbaidfunction` (
     `solutioncode` varchar(6) NOT  NULL COMMENT '솔루션코드',
     `functionno` int(4) NOT NULL AUTO_INCREMENT COMMENT '지원기능관리번호',
     `functionname` varchar(50) NOT NULL COMMENT '지원기능명',
     `freeaid` tinytext NOT NULL COMMENT 'free 지원기능',
     `basicaid` tinytext NOT NULL COMMENT 'basic 지원기능',
     `proaid` tinytext NOT NULL COMMENT 'pro 지원기능',
     `entaid` tinytext NOT NULL COMMENT 'enterprise 지원기능',
     `functioncode` varchar(6) NOT NULL COMMENT '기능구분(003)',
     `useyn` varchar(1) NOT NULL DEFAULT 'Y' COMMENT '사용여부',
     `stdate` varchar(8) NOT NULL DEFAULT date_format(curdate(),'%Y%m%d') COMMENT '시작일자',
     `eddate` varchar(8) NOT NULL DEFAULT '21991231' COMMENT '종료일자',
     `sortno` int(1) NOT NULL COMMENT '정렬기준',
     `createdAt` datetime NOT NULL DEFAULT current_timestamp() COMMENT '등록일시',
     `updatedAt` datetime NOT NULL DEFAULT current_timestamp() COMMENT '수정일시',
     PRIMARY KEY (`functionno`),
     KEY `IDX_tbaidfunction_001` (`solutioncode`,`functionno`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_general_ci COMMENT='가격정책별 지원기능';



-- 2023.09.13 카드 결제를 위한 필드 추가
ALTER TABLE tbtaxinformation ADD COLUMN customer_uid VARCHAR(50) null COMMENT '카드결제용 customer_uid';
ALTER TABLE tbtaxinformation ADD COLUMN paidyn VARCHAR(1) not null default 'N' COMMENT '이번달 결제여부';
ALTER TABLE tbtaxinformation ADD COLUMN next_pay_date datetime not null default current_timestamp() COMMENT '다음 결제일자';
ALTER TABLE tbtaxinformation ADD COLUMN paid_amount BIGINT not null default 0 COMMENT '결제금액';


ALTER TABLE tbtaxinformation ADD COLUMN last_pay_date datetime null COMMENT '마지막 결제일자' after paidyn ;
ALTER TABLE tbtaxinformation DROP COLUMN paidyn;
ALTER TABLE tbtaxinformation DROP COLUMN next_pay_date;
ALTER TABLE tbtaxinformation ADD COLUMN next_pay_date datetime null COMMENT '다음 결제일자' after last_pay_date;
ALTER TABLE tbtaxinformation ADD COLUMN imp_uid VARCHAR(50) null COMMENT '카드결제 결과 imp_uid';




alter table tbcommoncode modify applyvolume decimal(7,2);

update tbcommoncode
set applyvolume = case when commoncode = '1' then 5 when commoncode = '2' then 25 when commoncode = '3' then 50 else 100 end
where groupcode = '001';

commit;

alter table tbmemberlicense modify basevolume int(4) unsigned DEFAULT 0 ;
alter table tbmemberlicense modify servicevolume int(4) unsigned DEFAULT 0 ;
alter table tbmemberlicense modify addvolume  int(4) unsigned DEFAULT 0 ;
alter table tbmemberlicense modify updatedBy varchar(50)  DEFAULT NULL ;


-- 2023.09.14  명칭변경
alter table tbaidfunction change functioncode aidcode varchar(06);


-- 2023.09.15
ALTER TABLE netiscloud.tblicensepolicy MODIFY COLUMN sortno int(1) NOT NULL COMMENT '정렬기준';

-- 2023.09.15 결제히스토리 테이블 추가
create TABLE tbpayhistory (
    payhistoryid varchar(36) NOT NULL COMMENT '라이센스정책관리번호(uuid)',
    email varchar(50) NOT NULL COMMENT '이메일',
    customer_uid varchar(50) NOT NULL COMMENT 'customer_uid',
    imp_uid varchar(50) NOT NULL COMMENT 'imp_uid',
    paid_amount BIGINT NOT NULL COMMENT '결제금액',
    pay_date datetime NOT NULL DEFAULT current_timestamp() COMMENT '결제일시',
    primary key(payhistoryid)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='결제히스토리';

-- 2023.09.20 컬럼 변경
ALTER TABLE tbtaxinformation CHANGE Representationname representationname VARCHAR(50) not NULL;

-- 2023.09.20 tbmemberlicensehistory 도 tbmemberlicense 와 동일한 스킴으로 변경
alter table tbmemberlicensehistory modify basevolume int(4) unsigned DEFAULT 0 ;
alter table tbmemberlicensehistory modify servicevolume int(4) unsigned DEFAULT 0 ;
alter table tbmemberlicensehistory modify addvolume  int(4) unsigned DEFAULT 0 ;
alter table tbmemberlicensehistory modify updatedBy varchar(50)  DEFAULT NULL ;

-- 2023.09.21 tbmemberlicensehistory.prelicensegrade 컬럼 추가
alter table tbmemberlicensehistory add column prelicensegrade varchar(6) not null COMMENT '변경 전 라이센스등급' AFTER email;



-- 2023.10.06
ALTER TABLE tbmember ADD COLUMN hostname VARCHAR(50) not null COMMENT 'netis 서버명';

ALTER TABLE tbmember ADD COLUMN memberid VARCHAR(36) not null COMMENT '회원관리번호(uuid)';

update tbmember set memberid = uuid();  -- uuid 일괄 update

ALTER TABLE tbmember ADD UNIQUE tbmember_UK (email); -- unique 추가

ALTER TABLE tbmember DROP PRIMARY key, ADD PRIMARY KEY (memberid); -- p'key 삭제후 추가

insert into tbcommoncode
      (groupcode,	commoncode, codename)
values('100000'  ,   '100'    , 'netis host 관리'), ('100'  ,   'F1'    , 'free domain')

select * from tbcommoncode where groupcode = '100' or (groupcode = '000000' and commoncode = '100'); -- netis host 관리 codename에 도메인 ip입력


-- 2023.10.13
ALTER TABLE tbaidfunction ADD COLUMN datatype VARCHAR(100)  COMMENT '데이터입력방법' AFTER createdAt;



-- 2023.10.16
ALTER TABLE tbcommoncode modify COLUMN applyvolume decimal(7,2);

update tbcommoncode
  set applyvolume = case when commoncode = 1 then 5 when commoncode = 2 then 25 when commoncode = 3 then 50 else 100 end
  where groupcode = '001';

-- 2023.10.16
ALTER TABLE tbcommoncode modify COLUMN applyvolume decimal(7,2);


-- 2023.10.18
ALTER TABLE tbtaxinformation modify COLUMN settlementmeans varchar(06);

insert into tbcommoncode
      (groupcode,	commoncode, codename)
values('100000'  ,   '009'    , '결제방법'), ('009'  ,   'cash'    , '현금'), ('009'  ,   'card'    , '카드');


ALTER TABLE tbtaxhistory ADD COLUMN settlementmeans VARCHAR(006)  COMMENT '결제방법' AFTER issuedate;

ALTER TABLE tbtaxhistory DROP COLUMN issueyearmonth;
ALTER TABLE tbtaxhistory DROP COLUMN logindate;

-- 2023.10.18 jylee
ALTER TABLE tbtaxhistory ADD COLUMN customer_uid VARCHAR(50) null COMMENT '카드결제용 고객 uid';
ALTER TABLE tbtaxhistory ADD COLUMN imp_uid VARCHAR(50) null COMMENT '카드결제 결과 uid';

drop table tbpayhistory;

-- 2023.10.18 결제일자 추가
ALTER TABLE tbtaxhistory ADD COLUMN settlementdt VARCHAR(08) null COMMENT '결제일자';
카드결제일경우 발행일자을 결제일자로 update

-- 2023.10.19 login history
ALTER TABLE tbloginhistory CHANGE failreason reason varchar(10) COMMENT '사유(login or logout)';
ALTER TABLE tbloginhistory modify COLUMN logindate datetime default current_timestamp() COMMENT '로그인(로그아웃) 시간';

-- 2023.10.20 jylee
ALTER TABLE tbmember ADD COLUMN access_token VARCHAR(300) null COMMENT 'SSO 로긴용 access_token';



-- 2023.10.25 수정 not null -> null
alter table tbmemberusemonth modify column   basevolume tinyint(3) unsigned NULL COMMENT '기본장비수량';
alter table tbmemberusemonth modify column   basecharge int(8) unsigned NULL COMMENT '기본요금(라이센스요금)';
alter table tbmemberusemonth modify column   servicevolume tinyint(3) unsigned NULL COMMENT '서비스장비수량';
alter table tbmemberusemonth modify column   addvolume tinyint(3) unsigned NULL COMMENT '추가장비수량';
alter table tbmemberusemonth modify column   addcharge int(8) unsigned  NULL COMMENT '추가라이센스요금';
alter table tbmemberusemonth modify column   totalvolume tinyint(3) unsigned  NULL COMMENT '전체사용장비수량';
alter table tbmemberusemonth modify column   networkvolume tinyint(3) unsigned  NULL COMMENT '네트워크장비수량';
alter table tbmemberusemonth modify column   servervolume tinyint(3) unsigned  NULL COMMENT '서버장비수량';
alter table tbmemberusemonth modify column   apvolume tinyint(3) unsigned  NULL COMMENT 'ap장비수량';
alter table tbmemberusemonth modify column   dbmsvolume tinyint(3) unsigned  NULL COMMENT '데이터장비수량';
alter table tbmemberusemonth modify column   fmsvolume tinyint(3) unsigned  NULL COMMENT '시설장비수량';
alter table tbmemberusemonth modify column   totalcharge int(8) unsigned NULL  COMMENT '전체사용금액';

alter table tbmemberusehistory modify column   basevolume tinyint(3) unsigned NULL COMMENT '기본장비수량';
alter table tbmemberusehistory modify column   basecharge int(8) unsigned NULL COMMENT '기본요금(라이센스요금)';
alter table tbmemberusehistory modify column   servicevolume tinyint(3) unsigned NULL COMMENT '서비스장비수량';
alter table tbmemberusehistory modify column   addvolume tinyint(3) unsigned NULL COMMENT '추가장비수량';
alter table tbmemberusehistory modify column   addcharge int(8) unsigned  NULL COMMENT '추가라이센스요금';
alter table tbmemberusehistory modify column   totalvolume tinyint(3) unsigned  NULL COMMENT '전체사용장비수량';
alter table tbmemberusehistory modify column   networkvolume tinyint(3) unsigned  NULL COMMENT '네트워크장비수량';
alter table tbmemberusehistory modify column   servervolume tinyint(3) unsigned  NULL COMMENT '서버장비수량';
alter table tbmemberusehistory modify column   apvolume tinyint(3) unsigned  NULL COMMENT 'ap장비수량';
alter table tbmemberusehistory modify column   dbmsvolume tinyint(3) unsigned  NULL COMMENT '데이터장비수량';
alter table tbmemberusehistory modify column   fmsvolume tinyint(3) unsigned  NULL COMMENT '시설장비수량';
alter table tbmemberusehistory modify column   totalcharge int(8) unsigned NULL  COMMENT '전체사용금액';


-- 2023.11.01 수정
alter table tbmemberlicensehistory modify column   stdate varchar(8) NOT NULL DEFAULT date_format(curdate(),'%Y%m%d') COMMENT '시작일자';
alter table tbmemberlicensehistory modify column   eddate varchar(8) NOT NULL DEFAULT '21991231' COMMENT '만료일';
ALTER TABLE tbmemberlicensehistory ADD COLUMN modifycontent VARCHAR(100) null COMMENT '라이센스변경내용' AFTER eddate;;

----------------tgr_tbmemberlicense_insert -------------------
CREATE DEFINER=`root`@`%` TRIGGER tgr_tbmemberlicense_insert
AFTER insert
ON tbmemberlicense FOR EACH row
BEGIN
	INSERT INTO tbmemberlicensehistory( -- tbmemberlicensehistory 테이블 각 컬럼에 데이터를 추가해주겠다
	       licenseid        ,email            ,prelicensegrade  ,licensegrade     ,datakeepterm     ,
	       datakeepunit     ,basevolume       ,basecharge       ,servicevolume    ,addvolume        ,
	       addcharge        ,modifycontent    ,updatedBy                                            )
	select uuid()           ,a01.email        ,''               ,a01.licensegrade ,a01.datakeepterm ,
	       a01.datakeepunit ,a01.basevolume   ,a01.basecharge   ,a01.servicevolume,a01.addvolume    ,
	       a01.addcharge    ,'신규가입'          ,a01.email
      from tbmemberlicense a01
     where a01.email = new.userid ;
END
------------------tgr_tbmemberlicense_update ------------
CREATE DEFINER=`root`@`%` TRIGGER tgr_tbmemberlicense_update
AFTER update
ON tbmemberlicense FOR EACH ROW
begin

	DECLARE MODIFY_CONTENT VARCHAR(100) default '';
	DECLARE MODIFYFG       VARCHAR(001) default '';

	if NEW.licensegrade != OLD.licensegrade then
	   set MODIFY_CONTENT = concat('라이센스 등급변경(',OLD.licensegrade,'->',NEW.licensegrade,')');
	end IF;


    if LENGTH(MODIFY_CONTENT) >= 1 then
       set MODIFYFG = ',';
    end if;

    if NEW.addvolume != OLD.addvolume then
	   set MODIFY_CONTENT = concat(MODIFY_CONTENT,MODIFYFG,'장비추가');
	end IF;

    if LENGTH(MODIFY_CONTENT) = 0 then
       set MODIFYFG = '';
    else
       set MODIFYFG = ',';
    end if;

	if NEW.servicevolume != OLD.servicevolume then
	   set MODIFY_CONTENT = concat(MODIFY_CONTENT,MODIFYFG,'서비스장비');
	end IF;

	INSERT INTO tbmemberlicensehistory(
	       licenseid        ,email            ,prelicensegrade  ,licensegrade     ,datakeepterm     ,
	       datakeepunit     ,basevolume       ,basecharge       ,servicevolume    ,addvolume        ,
	       addcharge        ,modifycontent    ,updatedBy                                            )
	select uuid()           ,a01.email        ,old.licensegrade ,a01.licensegrade ,a01.datakeepterm ,
	       a01.datakeepunit ,a01.basevolume   ,a01.basecharge   ,a01.servicevolume,a01.addvolume    ,
	       a01.addcharge    ,MODIFY_CONTENT   ,a01.email
      from tbmemberlicense a01
     where a01.email = new.email ;
END


2023.11.02 추가
-- netiscloud.tbmemberhistory definition

CREATE TABLE `tbmemberhistory` (
  `memberhistoryid` varchar(36) NOT NULL COMMENT '회원정보변경(uuid)',
  `memberid` varchar(36) NOT NULL COMMENT '회원관리번호(uuid)',
  `membername` varchar(50) NOT NULL COMMENT '회원명',
  `grpname` varchar(50) NOT NULL DEFAULT '' COMMENT '그룹명',
  `celltel` varchar(15) NOT NULL COMMENT '회원전화번호',
  `password` varchar(128) NOT NULL COMMENT '비밀번호(단방향:sha-256,sha-512)',
  `businessname` varchar(100) NOT NULL COMMENT '사업장명',
  `businessnumber` varchar(10) NOT NULL COMMENT '사업자등록번호',
  `companyphone` varchar(15) NOT NULL COMMENT '사업장전화번호',
  `companyname` varchar(50) DEFAULT NULL COMMENT '법인(회사)명',
  `representationname` varchar(50) NOT NULL COMMENT '대표자명',
  `taxcompanynumber` varchar(10) NOT NULL COMMENT '계산서발행용사업자등록번호',
  `taxemail` varchar(50) NOT NULL COMMENT '세금계산서발송기관메일',
  `postnumber` varchar(5) NOT NULL COMMENT '우편번호',
  `address` varchar(100) NOT NULL COMMENT '주소',
  `detailaddress` varchar(100) NOT NULL COMMENT '상세주소',
  `businesscondition` varchar(50) NOT NULL COMMENT '업태',
  `businesskind` varchar(50) NOT NULL COMMENT '업종',
  `settlementmeans` varchar(6) DEFAULT NULL COMMENT '결제수단',
  `modifycontent` varchar(500) NOT NULL COMMENT '변경내용',
  `updateflag` varchar(1) NOT NULL DEFAULT 'Y' COMMENT 'update여부',
  `createdAt` datetime NOT NULL DEFAULT current_timestamp() COMMENT '등록일시',
  PRIMARY KEY (`memberhistoryid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_general_ci COMMENT='사용자 정보 변경 내역';


CREATE DEFINER=`root`@`%` TRIGGER tbmember_after_insert
AFTER INSERT
ON tbmember FOR EACH row
begin
	INSERT INTO tbmemberhistory(
	       memberhistoryid      ,memberid             ,membername           ,grpname              ,celltel
          ,password             ,businessname         ,businessnumber       ,companyphone         ,modifycontent      )
	values(uuid()               ,new.memberid         ,new.membername       ,new.grpname          ,new.celltel
          ,new.password         ,new.businessname     ,new.businessnumber   ,new.companyphone     ,'신규가입'             );
END


CREATE DEFINER=`root`@`%` TRIGGER tbmember_after_update
AFTER update
ON tbmember FOR EACH row
begin

	DECLARE MODIFY_CONTENT VARCHAR(100) default '';
	DECLARE MODIFYFG       VARCHAR(001) default '';

    update tbmemberhistory
       set updateflag = 'N'
     where memberid = new.memberid
       and updateflag = 'Y';

	if NEW.membername != OLD.membername then
	   set MODIFY_CONTENT = concat('사용자 이릅');
       set MODIFYFG = ',';
	end IF;

    if NEW.celltel != OLD.celltel then
	   set MODIFY_CONTENT = concat(MODIFY_CONTENT,MODIFYFG,'핸드폰번호');
       set MODIFYFG = ',';
	end IF;

    if NEW.businessname != OLD.businessname then
	   set MODIFY_CONTENT = concat(MODIFY_CONTENT,MODIFYFG,'사업장명');
       set MODIFYFG = ',';
	end IF;

    if NEW.businessnumber != OLD.businessnumber then
	   set MODIFY_CONTENT = concat(MODIFY_CONTENT,MODIFYFG,'사업자등록번호');
       set MODIFYFG = ',';
	end IF;

    if NEW.companyphone != OLD.companyphone then
	   set MODIFY_CONTENT = concat(MODIFY_CONTENT,MODIFYFG,'사업장전화번호');
	end IF;

    if length(MODIFY_CONTENT) >= 1 then
	    INSERT INTO tbmemberhistory(
		       memberhistoryid      ,memberid             ,membername           ,grpname              ,celltel
	          ,password             ,businessname         ,businessnumber       ,companyphone         ,modifycontent      )
		values(uuid()               ,new.memberid         ,new.membername       ,new.grpname          ,new.celltel
	          ,new.password         ,new.businessname     ,new.businessnumber   ,new.companyphone     ,MODIFY_CONTENT     );
    end if;
END


CREATE DEFINER=`root`@`localhost` TRIGGER `tbtaxinformation_after_insert`
AFTER INSERT
ON tbtaxinformation FOR EACH ROW
begin
	insert into tbmemberhistory(
	       memberhistoryid      ,memberid             ,membername           ,grpname              ,celltel
          ,password             ,businessname         ,businessnumber       ,companyphone         ,modifycontent
          ,companyname          ,representationname   ,taxcompanynumber     ,taxemail             ,postnumber
          ,address              ,detailaddress        ,businesscondition    ,businesskind         ,settlementmeans  )
    select ifnull(j01.memberhistoryid,uuid()),a01.memberid,a01.membername   ,a01.grpname          ,a01.celltel
          ,a01.password         ,a01.businessname     ,a01.businessnumber   ,companyphone         ,'신규가입'
          ,new.companyname      ,new.representationname,new.taxcompanynumber,new.taxemail         ,new.postnumber
          ,new.address          ,new.detailaddress    ,new.businesscondition,new.businesskind     ,new.settlementmeans
      from tbmember a01
           left join tbmemberhistory j01
                  on a01.memberid = j01.memberid
                 and j01.updateflag = 'Y'
     where a01.email = new.email
    ON DUPLICATE KEY UPDATE
           companyname = new.companyname
          ,representationname = new.representationname
          ,taxcompanynumber   = new.taxcompanynumber
          ,taxemail           = new.taxemail
          ,postnumber         = new.postnumber
          ,address            = new.address
          ,detailaddress      = new.detailaddress
          ,businesscondition  = new.businesscondition
          ,businesskind       = new.businesskind
          ,settlementmeans    = new.settlementmeans
          ,updateflag         = 'N';
END



CREATE DEFINER=`root`@`localhost` TRIGGER `tbtaxinformation_after_update`
AFTER update
ON tbtaxinformation FOR EACH ROW
begin

	DECLARE MODIFY_CONTENT VARCHAR(500) default '';
	DECLARE MODIFYFG       VARCHAR(001) default '';

	if NEW.companyname != OLD.companyname then
	   set MODIFY_CONTENT = concat('사업체명');
       set MODIFYFG = ',';
	end IF;

    if NEW.representationname != OLD.representationname then
	   set MODIFY_CONTENT = concat(MODIFY_CONTENT,MODIFYFG,'대표자명');
       set MODIFYFG = ',';
	end IF;

    if NEW.taxcompanynumber != OLD.taxcompanynumber then
	   set MODIFY_CONTENT = concat(MODIFY_CONTENT,MODIFYFG,'사업자등록번호');
       set MODIFYFG = ',';
	end IF;

    if NEW.taxemail != OLD.taxemail then
	   set MODIFY_CONTENT = concat(MODIFY_CONTENT,MODIFYFG,'발송기관메일');
       set MODIFYFG = ',';
	end IF;

    if NEW.postnumber != OLD.postnumber then
	   set MODIFY_CONTENT = concat(MODIFY_CONTENT,MODIFYFG,'주소');
       set MODIFYFG = ',';
    elseif NEW.address != OLD.address then
	   set MODIFY_CONTENT = concat(MODIFY_CONTENT,MODIFYFG,'주소');
       set MODIFYFG = ',';
    elseif NEW.detailaddress != OLD.detailaddress then
	   set MODIFY_CONTENT = concat(MODIFY_CONTENT,MODIFYFG,'상세주소');
       set MODIFYFG = ',';
	end IF;

    if length(MODIFY_CONTENT) >= 1 then
		insert into tbmemberhistory(
		       memberhistoryid      ,memberid             ,membername           ,grpname              ,celltel
	          ,password             ,businessname         ,businessnumber       ,companyphone         ,modifycontent
	          ,companyname          ,representationname   ,taxcompanynumber     ,taxemail             ,postnumber
	          ,address              ,detailaddress        ,businesscondition    ,businesskind         ,settlementmeans  ,updateflag)
	    select ifnull(j01.memberhistoryid,uuid()),a01.memberid,a01.membername   ,a01.grpname          ,a01.celltel
	          ,a01.password         ,a01.businessname     ,a01.businessnumber   ,a01.companyphone     ,concat(MODIFY_CONTENT,' 변경')
	          ,new.companyname      ,new.representationname,new.taxcompanynumber,new.taxemail         ,new.postnumber
	          ,new.address          ,new.detailaddress    ,new.businesscondition,new.businesskind     ,new.settlementmeans,'N'
	      from tbmember a01
	           left join tbmemberhistory j01
	                  on a01.memberid = j01.memberid
	                 and j01.updateflag = 'Y'
	     where a01.email = new.email
	    ON DUPLICATE KEY UPDATE
	           companyname = new.companyname
	          ,representationname = new.representationname
	          ,taxcompanynumber   = new.taxcompanynumber
	          ,taxemail           = new.taxemail
	          ,postnumber         = new.postnumber
	          ,address            = new.address
	          ,detailaddress      = new.detailaddress
	          ,businesscondition  = new.businesscondition
	          ,businesskind       = new.businesskind
	          ,settlementmeans    = new.settlementmeans
	          ,updateflag         = 'N';
    end if;
END

2023.11.14
2023.11.14
ALTER TABLE netiscloud.tbmember CHANGE sessionkey sessionkey varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT 'none' NOT NULL COMMENT '로그인 세션 아이디' AFTER hostname;
ALTER TABLE netiscloud.tbmember CHANGE sessionlimit sessionlimit timestamp DEFAULT current_timestamp() on update current_timestamp() NOT NULL COMMENT '아이디 저장 만료 기간' AFTER sessionkey;
ALTER TABLE netiscloud.tbmember CHANGE serverdomainname serverdomainname varchar(100) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT '' NULL COMMENT '회원접속도메인' AFTER sessionlimit;
ALTER TABLE netiscloud.tbmember CHANGE access_token access_token varchar(300) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL NULL COMMENT 'SSO 로긴용 access_token' AFTER serverdomainname;
-- db생성 및 pod생성 요청에 따른 임시저장 flag 추가  temporary_yn = 'Y'
ALTER TABLE netiscloud.tbmember ADD COLUMN temporary_yn VARCHAR(1)  COMMENT '임시저장여부' AFTER access_token;
-- db, pod생성 완료 응답시 임시저장 temporary_yn = 'N', 권한 부여 완료 메일 전송
-- db생성 및 pod생성 요청에 따른 임시저장 flag 추가  temporary_yn = 'Y'
ALTER TABLE netiscloud.tbmember ADD COLUMN temporary_yn VARCHAR(1)  COMMENT '임시저장여부' AFTER access_token;
-- db, pod생성 완료 응답시 임시저장 temporary_yn = 'N', 권한 부여 완료 메일 전송
