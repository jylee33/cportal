<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hamonsoft.cportal.repository.LicenseManageRepository">
    <!--    licensemanageview -->
    <select id="licensemanageview" resultType="hashmap">
        select a01.licensepolicyid ,
        a01.solutioncode    ,
        a01.solutionname    ,
        a01.policycode      ,
        a01.policyname      ,
        a01.licensecontent  ,
        a01.licenseamount   ,
        a01.licenseint      ,
        a01.aidcode         ,
        j01.codename aidname,
        concat(substring(a01.stdate, 1, 4),'-',substring(a01.stdate, 5, 2),'-',substring(a01.stdate, 7, 2)) stdate,
        concat(substring(a01.eddate, 1, 4),'-',substring(a01.eddate, 5, 2),'-',substring(a01.eddate, 7, 2)) eddate,
        a01.useyn           ,
        a01.sortno          ,
        a01.createdAt       ,
        a01.updatedAt       ,
        'R'   as crudflg   ,
        row_number() over (order by a01.solutioncode ,a01.createdAt desc) numrow
        from tblicensepolicy a01
             inner join tbcommoncode j01 on j01.groupcode = '003' and j01.commoncode = a01.aidcode
        where 1 = 1
        <choose>
            <when test="solutioncode != null and solutioncode neq ''">
                AND a01.solutioncode = #{solutioncode}
            </when>
        </choose>
    </select>



    <!--  라이센스정책관리 -->
    <insert id="licenseInsert">
        INSERT INTO tblicensepolicy(
            licensepolicyid ,solutioncode    ,solutionname    ,policycode      ,policyname      ,
            licensecontent  ,licenseamount   ,licenseint      ,aidcode         ,sortno)
        values(UUID()       ,#{solutioncode}, #{solutionname}, #{policycode}    ,#{policyname},
               #{licensecontent},#{licenseamount}      , #{licenseint} ,#{aidcode}, #{sortno}  )
    </insert>

    <!--  라이센스정책관리  -->
    <update id="licenseUpdate">
        UPDATE tblicensepolicy
        SET licensecontent =#{licensecontent}
          ,licenseamount =#{licenseamount}
          ,licenseint =#{licenseint}
          ,aidcode =#{aidcode}
          ,useyn  = #{useyn}
          ,sortno = #{sortno}
          ,eddate = replace(#{eddate},'-','')
        WHERE licensepolicyid = #{licensepolicyid}
    </update>

    <select id="licensePolicyList" resultType="hashmap">
        select a01.licensepolicyid ,      --   라이센스정책관리번호(uuid)
        a01.solutioncode    ,      --   솔루션코드
        a01.policycode      ,      --   라이센스정책코드(등급)
        a01.solutionname    ,      --   라이센스정책솔루션명
        a01.policyname      ,      --   라이센스정책명
        a01.licensecontent  ,      --   라이센스정책내용
        a01.licenseamount   ,      --   라이센스기본요금
        a01.licenseint      ,      --   라이센스가용장비수
        a01.aidcode         ,      --   지원기능구분(003)
        a01.stdate          ,      --   시작일자
        a01.eddate          ,      --   종료일자
        str_to_date(a01.stdate,'%Y%m%d') strstdate,
        str_to_date(a01.eddate,'%Y%m%d') streddate,
        a01.useyn           ,      --   사용여부
        a01.sortno          ,      --   정렬기준
        a01.createdAt       ,      --   등록일시
        a01.updatedAt       ,       --   수정일시
        row_number() over (order by a01.solutioncode ,a01.createdAt desc) numrow
        from tblicensepolicy a01
        where 1 = 1
        <choose>
            <when test="solutioncode != null and solutioncode neq ''">
                AND a01.solutioncode = #{solutioncode}
            </when>
        </choose>
    </select>

    <select id="aidfunctionList" resultType="hashmap">
        select
            a01.solutioncode ,
            j02.codename solutionname,
            a01.aidcode ,
            j01.codename  fnccodename,
            a01.functionno ,
            a01.functionname ,
            case when a01.freeaid = 'O' then '지원' when a01.freeaid = 'X' then '지원안함' else a01.freeaid end freenm, a01.freeaid,
            case when a01.basicaid = 'O' then '지원' when a01.basicaid = 'X' then '지원안함' else a01.basicaid end basicnm, a01.basicaid,
            case when a01.proaid = 'O' then '지원' when a01.proaid = 'X' then '지원안함' else a01.proaid end pronm, a01.proaid,
            case when a01.entaid = 'O' then '지원' when a01.entaid = 'X' then '지원안함' else a01.entaid end entnm, a01.entaid,
            a01.useyn ,
            STR_TO_DATE(a01.stdate, '%Y%m%d') stdate,
            STR_TO_DATE(a01.eddate, '%Y%m%d') eddate,
            a01.sortno ,
            a01.datatype,
            row_number() over (order by a01.aidcode ,a01.createdAt desc) numrow
        from tbaidfunction a01
        inner join tbcommoncode j01 on j01.groupcode = '003' and j01.commoncode = a01.aidcode
        inner join tbcommoncode j02 on j02.groupcode = '002' and j02.commoncode = a01.solutioncode
        where 1 = 1
        <choose>
            <when test="solutioncode != null and solutioncode neq ''">
                AND a01.solutioncode = if(#{solutioncode}='00',a01.solutioncode,#{solutioncode})
            </when>
        </choose>
        order by j01.sortno, a01.functionno
    </select>



    <select id="aidfunctionList1" resultType="hashmap">
        select a01.solutioncode   ,
        a01.aidcode    ,
        j01.codename        fnccodename,
        a01.useyn      ,
        a01.sortno
        from tbaidfunction a01
        inner join tbcommoncode j01
        on j01.groupcode    = '003'
        and a01.aidcode = j01.commoncode
        where 1 = 1
        <choose>
            <when test="solutioncode != null and solutioncode neq ''">
                AND a01.solutioncode = if(#{solutioncode}='00',a01.solutioncode,#{solutioncode})
            </when>
        </choose>
        order by j01.sortno, a01.functionno
    </select>



    <select id="aidfunctionList2" resultType="hashmap">
        select
            a01.solutioncode ,
            j02.codename solutionname,
            a01.aidcode ,
            j01.codename  fnccodename,
            a01.functionno ,
            a01.functionname ,
            case when a01.freeaid = 'O' then '지원' when a01.freeaid = 'X' then '지원안함' else a01.freeaid end freenm, a01.freeaid,
            case when a01.basicaid = 'O' then '지원' when a01.basicaid = 'X' then '지원안함' else a01.basicaid end basicnm, a01.basicaid,
            case when a01.proaid = 'O' then '지원' when a01.proaid = 'X' then '지원안함' else a01.proaid end pronm, a01.proaid,
            case when a01.entaid = 'O' then '지원' when a01.entaid = 'X' then '지원안함' else a01.entaid end entnm, a01.entaid,
            a01.useyn ,
            concat(substring(a01.stdate, 1, 4),'-',substring(a01.stdate, 5, 2),'-',substring(a01.stdate, 7, 2)) stdate,
            concat(substring(a01.eddate, 1, 4),'-',substring(a01.eddate, 5, 2),'-',substring(a01.eddate, 7, 2)) eddate,
            a01.sortno ,
            a01.datatype,
            row_number() over (order by a01.aidcode ,a01.createdAt desc) numrow
        from tbaidfunction a01
        inner join tbcommoncode j01 on j01.groupcode = '003' and j01.commoncode = a01.aidcode
        inner join tbcommoncode j02 on j02.groupcode = '002' and j02.commoncode = a01.solutioncode
        where 1 = 1
        <choose>
            <when test="solutioncode != null and solutioncode neq ''">
                AND a01.solutioncode = if(#{solutioncode}='00',a01.solutioncode,#{solutioncode})
            </when>
        </choose>
        order by j01.sortno, a01.functionno
    </select>

    <!--  가격정책별 지원기능  -->
    <insert id="aidfunctionInsert">
        INSERT INTO tbaidfunction(
                                  solutioncode  , functionname   , freeaid       ,basicaid   ,proaid
                                 ,entaid         , aidcode  ,useyn      ,sortno      )
        values(#{solutioncode}, #{functionname}, #{freeaid}    ,#{basicaid},#{proaid}
             ,#{entaid}      , #{aidcode} ,#{useyn} ,#{sortno})
    </insert>

    <!--  가격정책별 지원기능  -->
    <update id="aidfunctionUpdate">
        UPDATE tbaidfunction
           SET functionname =#{functionname}
             ,freeaid =#{freeaid}
             ,basicaid =#{basicaid}
             ,proaid =#{proaid}
             ,entaid =#{entaid}
             ,aidcode =#{aidcode}
             ,useyn=#{useyn}
             ,sortno=#{sortno}
        WHERE solutioncode = #{solutioncode}
          and functionno = #{functionno}
    </update>

    <!--  credit 제공 조회  -->
    <select id="creditView" resultType="hashmap">
        select a01.groupcode  ,      --   group code
        a01.commoncode    ,      --   공통코드
        a01.codename      ,      --   코드명
        a01.applyvolume    ,      --   적용수량(Credit 적용,라이센스정책)
        a01.useyn      ,
        concat(substring(a01.stdate, 1, 4),'-',substring(a01.stdate, 5, 2),'-',substring(a01.stdate, 7, 2)) stdate,
        concat(substring(a01.eddate, 1, 4),'-',substring(a01.eddate, 5, 2),'-',substring(a01.eddate, 7, 2)) eddate,
        a01.sortno      ,
        'R'   as crudflg   ,
        row_number() over (order by a01.commoncode ,a01.stdate desc) numrow
        from tbcommoncode a01
        where 1 = 1
        <choose>
            <when test="groupcode != null and groupcode neq ''">
                AND a01.groupcode = if(#{groupcode}='00',a01.groupcode,#{groupcode})
            </when>
        </choose>
        order by a01.sortno
    </select>

    <!--  credit 제공 추가  -->
    <insert id="creditInsert">
        INSERT INTO tbcommoncode(
              groupcode  , commoncode   , codename       ,applyvolume   ,useyn ,sortno      )
        values(#{groupcode}, #{commoncode}, #{codename}    ,#{applyvolume},#{useyn} ,#{sortno}   )
    </insert>

    <!--  credit 제공 수정  -->
    <update id="creditUpdate">
        UPDATE tbcommoncode
        SET codename =#{codename}
          ,applyvolume =#{applyvolume}
          ,useyn  = #{useyn}
          ,sortno = #{sortno}
          ,eddate = replace(#{eddate},'-','')
        WHERE groupcode = #{groupcode}
          and commoncode = #{commoncode}
    </update>
</mapper>