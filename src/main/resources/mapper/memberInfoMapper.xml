<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hamonsoft.cportal.repository.MemberInfoRepository">
    <!--  사용자 전체 건수  -->
    <select id="memberInfoCount" resultType="int">
        select count(*)
        from tbmember                      a01
        inner join tbmemberlicense    j01
        on a01.email = j01.email
        left  join tbtaxinformation   j02
        on a01.email = j02.email
        left  join tbmemberusehistory j03
        on a01.email = j03.email
        and(j03.useday, j03.useday) in (select email, max(useday) useday from tbmemberusehistory group by email)
        where 1 = 1
        and a01.withdrawalyn != '1'
        <choose>
            <when test="searchName != null and searchName neq ''">
                AND a01.membername like concat(#{searchName},'%')
            </when>
        </choose>
    </select>


    <!-- 사용자 전체리스트 조회  -->
    <select id="memberInfoFirstList" resultType="hashmap">
        select a.*
        from(
            select a01.memberid
            ,a01.membername
            ,a01.email
            ,a01.licensegrade
            ,REGEXP_REPLACE(replace(a01.celltel,'-',''), '(02|.{3})(.+)(.{4})', '\\1-\\2-\\3')celltel
            ,a01.businessname
            ,a01.businessnumber
            ,concat(substring(a01.businessnumber,1,3),'-',substring(a01.businessnumber,4,2),'-',substring(a01.businessnumber,6)) strbusinessnumber
            ,a01.joindate
            ,str_to_date(a01.joindate,'%Y%m%d') strjoindate
            ,a01.hostname
            ,j04.codename hostip
            ,a01.serverdomainname
            ,j01.datakeepterm
            ,j01.datakeepunit
            ,j01.basevolume + j01.servicevolume + j01.addvolume totalsoluble
            ,j01.basevolume
            ,j01.basecharge
            ,ifnull(j01.servicevolume,0)  servicevolume          -- 서비스장비수량
            ,ifnull(j01.addvolume,0)       addvolume              -- 추가장비수량
            ,ifnull(j01.servicevolume,0)   preservicevolume    -- 이전서비스장비수량
            ,ifnull(j01.addvolume,0)       preaddvolume    -- 이전추가장비수량
            ,j01.addcharge
            ,j02.postnumber
            ,j02.address
            ,j02.detailaddress
            ,concat(j02.postnumber,' ',j02.address,' ',j02.detailaddress) zipaddress
            ,j03.totalvolume
            ,j03.networkvolume
            ,j03.servervolume
            ,j03.apvolume
            ,j03.dbmsvolume
            ,j03.fmsvolume
            ,j03.totalcharge
            ,round(j03.totalvolume / (j01.basevolume + j01.servicevolume + j01.addvolume) * 100,2) userate
            ,row_number() over(order by a01.joindate DESC, a01.email) AS rownum
            from tbmember                      a01
            inner join tbmemberlicense    j01
            on a01.email = j01.email
            left  join tbtaxinformation   j02
            on a01.email = j02.email
            left  join tbmemberusehistory j03
            on a01.email = j03.email
            and(j03.email, j03.useday) in  (select email, max(useday) useday from tbmemberusehistory group by email)
            left  join tbcommoncode       j04
                    on j04.groupcode = '100'
                   and j04.commoncode = a01.hostname
        where 1 = 1
        and a01.withdrawalyn != '1'
        <choose>
            <when test="searchName != null and searchName neq ''">
                AND a01.membername like concat(#{searchName},'%')
            </when>
        </choose>
        ) as a
        where 1 = 1
        <if test="firstRecordIndex !=null and lastRecordIndex != null">
            and a.rownum BETWEEN #{firstRecordIndex} AND #{lastRecordIndex}
        </if>
        order by a.joindate DESC, a.email
    </select>

    <!-- 사용자 전체리스트 조회  -->
    <select id="memberInfoList" resultType="hashmap">
        select a.*
        from(
        select a01.memberid
        ,a01.membername
        ,a01.email
        ,a01.licensegrade
        ,REGEXP_REPLACE(replace(a01.celltel,'-',''), '(02|.{3})(.+)(.{4})', '\\1-\\2-\\3')celltel
        ,a01.businessname
        ,a01.businessnumber
        ,concat(substring(a01.businessnumber,1,3),'-',substring(a01.businessnumber,4,2),'-',substring(a01.businessnumber,6)) strbusinessnumber
        ,a01.joindate
        ,str_to_date(a01.joindate,'%Y%m%d') strjoindate
        ,a01.hostname
        ,j04.codename hostip
        ,ifnull(a01.serverdomainname,'') serverdomainname
        ,j01.datakeepterm
        ,j01.datakeepunit
        ,j01.basevolume + j01.servicevolume + j01.addvolume totalsoluble
        ,j01.basevolume
        ,j01.basecharge
        ,j01.servicevolume
        ,j01.addvolume
        ,j01.addcharge
        ,j01.stdate
        ,j01.eddate
        ,str_to_date(j01.stdate,'%Y%m%d') strstdate
        ,str_to_date(j01.eddate,'%Y%m%d') streddate
        ,j02.postnumber
        ,j02.address
        ,j02.detailaddress
        ,concat(j02.postnumber,' ',j02.address,' ',j02.detailaddress) zipaddress
        ,j03.totalvolume
        ,j03.networkvolume
        ,j03.servervolume
        ,j03.apvolume
        ,j03.dbmsvolume
        ,j03.fmsvolume
        ,j03.totalcharge
        ,case when a01.withdrawalyn = '0' then '회원' when a01.withdrawalyn = '1' then '탈퇴' else '중지' end statusnm
        ,round(j03.totalvolume / (j01.basevolume + j01.servicevolume + j01.addvolume) * 100,2) userate
        ,row_number() over(order by a01.joindate DESC, a01.email) AS rownum
        from tbmember                      a01
        inner join tbmemberlicense    j01
        on a01.email = j01.email
        left  join tbtaxinformation   j02
        on a01.email = j02.email
        left  join tbmemberusehistory j03
        on a01.email = j03.email
        and(j03.email, j03.useday) in  (select email, max(useday) useday from tbmemberusehistory group by email)
        left  join tbcommoncode       j04
        on j04.groupcode = '100'
        and j04.commoncode = a01.hostname
        where 1 = 1
        and a01.withdrawalyn != '1'
        <choose>
            <when test="searchName != null and searchName neq ''">
                AND a01.membername like concat(#{searchName},'%')
            </when>
        </choose>
        ) as a
        where 1 = 1
        <if test="firstRecordIndex !=null and lastRecordIndex != null">
            and a.rownum BETWEEN #{firstRecordIndex} AND #{lastRecordIndex}
        </if>
        order by a.joindate DESC, a.email
    </select>

    <!--  사용자정보 조회  -->
    <select id="memberLicenseInfo" resultType="hashmap">
        select a01.memberid
             ,a01.membername
             ,a01.email
             ,a01.licensegrade
             ,a01.celltel
             ,a01.businessname
             ,a01.businessnumber
             ,concat(substring(a01.businessnumber,1,3),'-',substring(a01.businessnumber,4,2),'-',substring(a01.businessnumber,6,5)) strbusinessnumber
             ,a01.joindate
             ,str_to_date(a01.joindate,'%Y%m%d') strjoindate
            ,a01.hostname
            ,j04.codename hostip
             ,ifnull(a01.serverdomainname,'') serverdomainname
             ,case when a01.withdrawalyn = '0' then '회원' when a01.withdrawalyn = '1' then '탈퇴' else '중지' end statusnm
             ,j01.datakeepterm          -- 데이터보관기간
             ,j01.datakeepunit          -- 데이터보관단위(D:일,M:월,Y:년)
             ,j01.basevolume + IFNULL(j01.servicevolume,0) + IFNULL(j01.addvolume,0) totalsoluble -- 전체가용장비
             ,j01.basevolume            -- 기본장비수량
             ,j01.basecharge            -- 기본요금(라이센스요금)
            ,ifnull(j01.servicevolume,0)  servicevolume          -- 서비스장비수량
            ,ifnull(j01.addvolume,0)       addvolume              -- 추가장비수량
            ,ifnull(j01.servicevolume,0)   preservicevolume    -- 이전서비스장비수량
            ,ifnull(j01.addvolume,0)       preaddvolume    -- 이전추가장비수량
             ,j01.addcharge             -- 추가라이센스요금
             ,j01.basecharge + IFNULL(j01.addcharge,0) totcharge  -- 라이센스합계금액
             ,j02.representationname
             ,j02.businesskind
             ,j02.businesscondition
             ,j02.postnumber
             ,j02.address
             ,j02.detailaddress
             ,concat(j02.postnumber,' ',j02.address,' ',j02.detailaddress) zipaddress
             ,IFNULL(j03.totalvolume,0)   totalvolume
             ,IFNULL(j03.networkvolume,0) networkvolume
             ,IFNULL(j03.servervolume,0)  servervolume
             ,IFNULL(j03.apvolume,0)      apvolume
             ,IFNULL(j03.dbmsvolume,0)    dbmsvolume
             ,IFNULL(j03.fmsvolume,0)     fmsvolume
             ,IFNULL(j03.totalcharge,0)   totalcharge
             ,round(IFNULL(j03.totalvolume,0) / (j01.basevolume + IFNULL(j01.servicevolume,0) + IFNULL(j01.addvolume,0)) * 100,2) userate
             ,row_number() over(order by a01.joindate DESC, a01.email) AS rownum
        from tbmember                      a01
                 inner join tbmemberlicense    j01
                            on a01.email = j01.email
                 left  join tbtaxinformation   j02
                            on a01.email = j02.email
                 left  join tbmemberusehistory j03
                            on a01.email = j03.email
                                and j03.useday= (select max(useday) useday from tbmemberusehistory where email = #{strEmail})
                left  join tbcommoncode       j04
                on j04.groupcode = '100'
                and j04.commoncode = a01.hostname
        where 1 = 1
          and a01.email = #{strEmail}
          and a01.withdrawalyn != '1'
    </select>

    <!--  과금내역 정보 조회  -->
    <select id="memberChargeList" resultType="hashmap">
        select a01.memberid
             ,a01.membername          -- 회원명
             ,a01.email                 -- 이메일
             ,a01.licensegrade          -- 라이센스등급
             ,a01.celltel               -- 회원전화번호
             ,a01.businessname          -- 사업장명
             ,a01.businessnumber        -- 사업자등록번호
             ,concat(substring(a01.businessnumber,1,3),'-',substring(a01.businessnumber,4,2),'-',substring(a01.businessnumber,6,5)) strbusinessnumber
             ,a01.joindate              -- 가입일자
             ,str_to_date(a01.joindate,'%Y%m%d') strjoindate
            ,a01.hostname
            ,j04.codename hostip
             ,a01.serverdomainname
             ,case when a01.withdrawalyn = '0' then '회원' when a01.withdrawalyn = '1' then '탈퇴' else '중지' end statusnm  -- 회원상태
             ,j01.datakeepterm          -- 데이터보관기간
             ,j01.datakeepunit          -- 데이터보관단위(D:일,M:월,Y:년)
             ,concat(j01.datakeepterm,'(',if(j01.datakeepunit='D','일',if(j01.datakeepunit='M','월', '년')),')') datakeepnm
             ,IFNULL(j01.basevolume,0) + IFNULL(j01.servicevolume,0) + IFNULL(j01.addvolume,0) totalsoluble -- 전체가용장비
             ,j01.basevolume            -- 기본장비수량
             ,j01.basecharge
             ,FORMAT(j01.basecharge, 0) format_basecharge -- 기본요금(라이센스요금)
             ,j01.servicevolume         -- 서비스장비수량
             ,j01.addvolume             -- 추가장비수량
            ,j01.addcharge             -- 추가라이센스요금
           ,FORMAT(j01.addcharge, 0) format_addcharge
            ,IFNULL(j01.basecharge,0) + IFNULL(j01.addcharge,0) totcharge  -- 라이센스합계금액
            ,FORMAT(IFNULL(j01.basecharge,0) + IFNULL(j01.addcharge,0),0) format_totcharge  -- 라이센스합계금액
             ,j02.Representationname    -- 대표자
             ,j02.businesskind          -- 업태
             ,j02.businesscondition     -- 업종
             ,j02.postnumber            -- 우편번호
             ,j02.address               -- 주소
             ,j02.detailaddress         -- 상세주소
             ,concat(j02.postnumber,' ',j02.address,' ',j02.detailaddress) zipaddress
             ,j03.useyym                  useyym
             ,concat(substring(j03.useyym,1,4),'.',substring(j03.useyym,5,2)) struseyym
             ,j03.useyym                  useyym
             ,IFNULL(j03.totalvolume,0)   totalvolume
             ,IFNULL(j03.networkvolume,0) networkvolume
             ,IFNULL(j03.servervolume,0)  servervolume
             ,IFNULL(j03.apvolume,0)      apvolume
             ,IFNULL(j03.dbmsvolume,0)    dbmsvolume
             ,IFNULL(j03.fmsvolume,0)     fmsvolume
             ,IFNULL(j03.totalcharge,0)   totalcharge
             ,FORMAT(IFNULL(j03.totalcharge,0),0)   format_totalcharge
             ,round(IFNULL(j03.totalvolume,0) / (IFNULL(j01.basevolume,0) + IFNULL(j01.servicevolume,0) + IFNULL(j01.addvolume,0)) * 100,2) userate
             ,row_number() over(order by j03.useyym DESC) AS rownum
        from tbmember                      a01
                 inner join tbmemberlicense    j01
                            on a01.email = j01.email
                 inner  join tbtaxinformation   j02
                             on a01.email = j02.email
                 inner  join tbmemberusemonth j03
                             on a01.email = j03.email
                left  join tbcommoncode       j04
                on j04.groupcode = '100'
                and j04.commoncode = a01.hostname
        where 1 = 1
          and a01.email = #{email}
          and a01.withdrawalyn != '1'
        order by j03.useyym DESC
    </select>


    <!--  세금계산서 내역 정보 조회  -->
    <select id="memberTaxList" resultType="hashmap">
        select a01.memberid
              ,a01.membername          -- 회원명
             ,a01.email                 -- 이메일
             ,a01.licensegrade          -- 라이센스등급
             ,a01.celltel               -- 회원전화번호
             ,a01.businessname          -- 사업장명
             ,a01.businessnumber        -- 사업자등록번호
             ,concat(substring(a01.businessnumber,1,3),'-',substring(a01.businessnumber,4,2),'-',substring(a01.businessnumber,6,5)) strbusinessnumber
             ,a01.joindate              -- 가입일자
             ,str_to_date(a01.joindate,'%Y%m%d') strjoindate
            ,a01.hostname
            ,j04.codename hostip
             ,a01.serverdomainname
             ,case when a01.withdrawalyn = '0' then '회원' when a01.withdrawalyn = '1' then '탈퇴' else '중지' end statusnm
             ,j01.taxhistoryid          -- 세금계산서발행내역
             ,j01.taxid                 -- 세금계산서발행기관정보
            ,j01.issueamount
            ,FORMAT(j01.issueamount, 0) format_issueamount -- 발행금액
             ,j01.issuedate             -- 발행일자
             ,str_to_date(j01.issuedate,'%Y%m%d') strissuedate
            ,IFNULL(j01.customer_uid,'')          customer_uid
            ,IFNULL(j01.imp_uid,'')               imp_uid
            ,str_to_date(j01.settlementdt,'%Y%m%d') strsettlementdt
            ,IFNULL(j01.settlementdt,'')            settlementdt
            ,str_to_date(j01.settlementdt,'%Y%m%d') format_settlementdt
            ,case when j01.issuedate >= date_format(DATE_ADD(curdate(), interval -15 day), '%Y%m%d') then '' else '체납' end arrearsyn
             ,IFNULL(j01.settlementmeans,'')  settlementmeans
             ,j02.representationname    -- 대표자
             ,j02.businesskind          -- 업태
             ,j02.businesscondition     -- 업종
             ,j02.postnumber            -- 우편번호
             ,j02.address               -- 주소
             ,j02.detailaddress         -- 상세주소
             ,concat(j02.postnumber,' ',j02.address,' ',j02.detailaddress) zipaddress
             ,j01.createdAt
             ,row_number() over(order by j01.issuedate DESC, j01.createdAt desc) AS rownum
        from tbmember                    a01
                 inner join tbtaxinformation j02
                     inner join tbtaxhistory     j01
                                on j02.taxid = j01.taxid
                              and IFNULL(j01.issueamount,0) >= 1
                          on a01.email = j02.email
                left  join tbcommoncode       j04
                on j04.groupcode = '100'
                and j04.commoncode = a01.hostname
        where 1 = 1
          and a01.email = #{strEmail}
          and a01.withdrawalyn != '1'
        order by j01.issuedate DESC, j01.createdAt desc
    </select>

    <!--  회원정보 변경이력  -->
    <select id="memberHistoryList" resultType="hashmap">
        select a01.memberid
            ,a01.email                 -- 이메일
            ,a01.licensegrade          -- 라이센스등급
            ,j11.codename licensegradenm
            ,j01.memberhistoryid
            ,j01.membername
            ,j01.grpname
            ,REGEXP_REPLACE(replace(j01.celltel,'-',''), '(02|.{3})(.+)(.{4})', '\\1-\\2-\\3') celltel
            ,j01.password
            ,j01.businessname
            ,j01.businessnumber
            ,concat(substring(j01.businessnumber,1,3),'-',substring(j01.businessnumber,4,2),'-',substring(j01.businessnumber,6,5)) strbusinessnumber
            ,REGEXP_REPLACE(replace(j01.companyphone,'-',''), '(02|.{3})(.+)(.{4})', '\\1-\\2-\\3') companyphone
            ,j01.companyname
            ,j01.representationname
            ,j01.taxcompanynumber
            ,concat(substring(j01.taxcompanynumber,1,3),'-',substring(j01.taxcompanynumber,4,2),'-',substring(j01.taxcompanynumber,6,5)) strtaxcompanynumber
            ,j01.taxemail
            ,j01.postnumber
            ,j01.address
            ,j01.detailaddress
            ,concat(j01.postnumber,' ',j01.address,' ',j01.detailaddress) zipaddress
            ,j01.businesscondition
            ,j01.businesskind
            ,j01.settlementmeans
            ,j12.codename settlementmeansnm
            ,j01.modifycontent
            ,j01.updateflag
            ,j01.createdAt
            ,DATE_FORMAT(j01.createdAt, '%Y-%m-%d %H:%i:%s') format_createdAt
            ,row_number() over(order by j01.createdAt desc) AS rownum
        from tbmember                   a01
            left  join tbcommoncode j11 on j11.groupcode = '001' and j11.commoncode = a01.licensegrade
            inner join tbmemberhistory  j01
            left  join tbcommoncode j12 on j12.groupcode = '009' and j12.commoncode = j01.settlementmeans
            on a01.memberid = j01.memberid
            left  join tbcommoncode       j04
            on j04.groupcode = '100'
            and j04.commoncode = a01.hostname
        where 1 = 1
        and a01.email = #{searchName}
        and a01.withdrawalyn != '1'
    </select>

    <!--  라이센스변경이력  -->
    <select id="licenseHistoryList" resultType="hashmap">
        select a01.memberid
        ,a01.membername          -- 회원명
        ,a01.email                 -- 이메일
        ,a01.licensegrade          -- 라이센스등급
        ,a01.celltel               -- 회원전화번호
        ,a01.businessname          -- 사업장명
        ,a01.businessnumber        -- 사업자등록번호
        ,j02.representationname    -- 대표자
        ,concat(substring(a01.businessnumber,1,3),'-',substring(a01.businessnumber,4,2),'-',substring(a01.businessnumber,6,5)) strbusinessnumber
        ,a01.joindate              -- 가입일자
        ,str_to_date(a01.joindate,'%Y%m%d') strjoindate
        ,a01.hostname
        ,j04.codename hostip
        ,a01.serverdomainname
        ,case when a01.withdrawalyn = '0' then '회원' when a01.withdrawalyn = '1' then '탈퇴' else '중지' end statusnm
        ,j01.licenseid
        ,j01.prelicensegrade
        ,j11.codename prelicensegradenm
        ,j01.licensegrade licensegrade2
        ,j12.codename licensegradenm
        ,concat(j01.datakeepterm,'(',j13.codename,')') datakeepterm
        ,j01.datakeepunit
        ,j01.basevolume
        ,j01.basecharge
        ,FORMAT(j01.basecharge, 0) format_basecharge
        ,j01.servicevolume
        ,j01.addvolume
        ,j01.addcharge
        ,FORMAT(j01.addcharge, 0) format_addcharge
        ,j01.modifycontent
        ,j01.createdAt
        ,DATE_FORMAT(j01.createdAt, '%Y-%m-%d %H:%i:%s') format_createdAt
        ,j01.stdate
        ,row_number() over(order by j01.stdate DESC, j01.createdAt desc) AS rownum
        from tbmember                    a01
            inner join tbmemberlicensehistory  j01
                left  join tbcommoncode j11 on j11.groupcode = '001' and j11.commoncode = j01.prelicensegrade
                left  join tbcommoncode j12 on j12.groupcode = '001' and j12.commoncode = j01.licensegrade
                left  join tbcommoncode j13 on j13.groupcode = '008' and j13.commoncode = j01.datakeepunit
              on a01.email = j01.email
            inner  join tbtaxinformation   j02
            on a01.email = j02.email
           left  join tbcommoncode       j04
              on j04.groupcode = '100'
             and j04.commoncode = a01.hostname
        where 1 = 1
        and a01.email = #{searchName}
        and a01.withdrawalyn != '1'
        order by j01.stdate DESC, j01.createdAt desc
    </select>

    <!--  과금내역 정보 조회  paging구현-->
    <select id="memberChargePageList" resultType="hashmap">
        select a.*, case when unpaidcnt >= 1 then concat(a.unpaidcnt,'건 미납(',format(a.unpaidamt,0),'원)') else '' end unpaiddscr
        from(select a01.memberid
        ,a01.membername          -- 회원명
        ,a01.email                 -- 이메일
        ,a01.licensegrade          -- 라이센스등급
        ,a01.celltel               -- 회원전화번호
        ,a01.businessname          -- 사업장명
        ,a01.businessnumber        -- 사업자등록번호
        ,a01.joindate              -- 가입일자
        ,str_to_date(a01.joindate,'%Y%m%d') strjoindate
        ,a01.hostname
        ,j04.codename hostip
        ,a01.serverdomainname
        ,case when a01.withdrawalyn = '0' then '회원' when a01.withdrawalyn = '1' then '탈퇴' else '중지' end statusnm  -- 회원상태
        ,j01.datakeepterm          -- 데이터보관기간
        ,j01.datakeepunit          -- 데이터보관단위(D:일,M:월,Y:년)
        ,concat(j01.datakeepterm,'(',if(j01.datakeepunit='D','일',if(j01.datakeepunit='M','월', '년')),')') datakeepnm
        ,j01.basevolume + IFNULL(j01.servicevolume,0) + IFNULL(j01.addvolume,0) totalsoluble -- 전체가용장비
        ,j01.basevolume            -- 기본장비수량
        ,j01.basecharge
        ,FORMAT(j01.basecharge, 0) format_basecharge -- 기본요금(라이센스요금)
        ,j01.servicevolume         -- 서비스장비수량
        ,j01.addvolume             -- 추가장비수량
        ,j01.addcharge addcharge -- 추가라이센스요금
        ,FORMAT(j01.addcharge, 0) format_addcharge -- 추가라이센스요금
        ,j01.basecharge + IFNULL(j01.addcharge,0) totcharge  -- 라이센스합계금액
        ,j02.Representationname    -- 대표자
        ,j02.businesskind          -- 업태
        ,j02.businesscondition     -- 업종
        ,j02.postnumber            -- 우편번호
        ,j02.address               -- 주소
        ,j02.detailaddress         -- 상세주소
        ,concat(j02.postnumber,' ',j02.address,' ',j02.detailaddress) zipaddress
        ,j03.useyym                  useyym
        ,IFNULL(j03.totalvolume,0)   totalvolume
        ,IFNULL(j03.networkvolume,0) networkvolume
        ,IFNULL(j03.servervolume,0)  servervolume
        ,IFNULL(j03.apvolume,0)      apvolume
        ,IFNULL(j03.dbmsvolume,0)    dbmsvolume
        ,IFNULL(j03.fmsvolume,0)     fmsvolume
        ,IFNULL(j03.totalcharge,0)   totalcharge
        ,concat(substring(j03.useyym,1,4),'.',substring(j03.useyym,5,2)) struseyym
        ,round(IFNULL(j03.totalvolume,0) / (j01.basevolume + IFNULL(j01.servicevolume,0) + IFNULL(j01.addvolume,0)) * 100,2) userate
        ,(select count(i01.taxhistoryid) from tbtaxhistory i01 where i01.taxid = j02.taxid and length(settlementdt) = 0) unpaidcnt
        ,(select sum(i01.issueamount)    from tbtaxhistory i01 where i01.taxid = j02.taxid and length(settlementdt) = 0) unpaidamt
        ,row_number() over(order by j03.useyym DESC) AS rownum
        from tbmember                      a01
            inner join tbmemberlicense    j01
            on a01.email = j01.email
            inner  join tbtaxinformation   j02
            on a01.email = j02.email
            inner  join tbmemberusemonth   j03
            on a01.email = j03.email
            left  join tbcommoncode        j04
            on j04.groupcode = '100'
            and j04.commoncode = a01.hostname
        where 1 = 1
        and a01.email = #{searchName}
        and a01.withdrawalyn != '1') as a
        where 1 = 1
        <if test="firstRecordIndex !=null and lastRecordIndex != null">
            and a.rownum BETWEEN #{firstRecordIndex} AND #{lastRecordIndex}
        </if>
        order by a.useyym DESC
    </select>


    <!--  세금계산서 내역 정보 조회   paging구현 -->
    <select id="memberTaxPageList" resultType="hashmap">
        select a.*
        from(
        select a01.memberid
        ,a01.membername          -- 회원명
        ,a01.email                 -- 이메일
        ,a01.licensegrade          -- 라이센스등급
        ,a01.celltel               -- 회원전화번호
        ,a01.businessname          -- 사업장명
        ,a01.businessnumber        -- 사업자등록번호
        ,concat(substring(a01.businessnumber,1,3),'-',substring(a01.businessnumber,4,2),'-',substring(a01.businessnumber,6,5)) strbusinessnumber
        ,a01.joindate              -- 가입일자
        ,str_to_date(a01.joindate,'%Y%m%d') strjoindate
        ,a01.hostname
        ,j04.codename hostip
        ,a01.serverdomainname
        ,case when a01.withdrawalyn = '0' then '회원' when a01.withdrawalyn = '1' then '탈퇴' else '중지' end statusnm
        ,j01.taxhistoryid          -- 세금계산서발행내역
        ,j01.taxid                 -- 세금계산서발행기관정보
        ,j01.issueamount
        ,FORMAT(j01.issueamount, 0) format_issueamount
        ,j01.issuedate             -- 발행일자
        ,str_to_date(j01.issuedate,'%Y%m%d') strissuedate
        ,case when j01.settlementdt is not null then '' else '체납' end arrearsyn
        ,IFNULL(j01.customer_uid,'')          customer_uid
        ,IFNULL(j01.imp_uid,'')               imp_uid
        ,str_to_date(j01.settlementdt,'%Y%m%d') strsettlementdt
        ,IFNULL(j01.settlementdt,'')            settlementdt
        ,str_to_date(j01.settlementdt,'%Y%m%d') format_settlementdt
        ,IFNULL(j01.settlementmeans,'')  settlementmeans
        ,j12.codename settlementmeansnm
        ,j02.representationname    -- 대표자
        ,j02.businesskind          -- 업태
        ,j02.businesscondition     -- 업종
        ,j02.postnumber            -- 우편번호
        ,j02.address               -- 주소
        ,j02.detailaddress         -- 상세주소
        ,concat(j02.postnumber,' ',j02.address,' ',j02.detailaddress) zipaddress
        ,j01.createdAt
        ,row_number() over(order by j01.issuedate DESC, j01.createdAt desc) AS rownum
        from tbmember                    a01
             inner join tbtaxinformation j02
                     inner join tbtaxhistory     j01
                                left  join tbcommoncode j12 on j12.groupcode = '009' and j12.commoncode = j01.settlementmeans
                           on j02.taxid = j01.taxid
                          and IFNULL(j01.issueamount,0) >= 1
                      on a01.email = j02.email
             left  join tbcommoncode       j04
                      on j04.groupcode = '100'
                     and j04.commoncode = a01.hostname
        where 1 = 1
        and a01.email = #{searchName}
        and a01.withdrawalyn != '1')  as a
        where 1 = 1
        <if test="firstRecordIndex !=null and lastRecordIndex != null">
            and a.rownum BETWEEN #{firstRecordIndex} AND #{lastRecordIndex}
        </if>
        order by a.issuedate DESC, a.createdAt desc
    </select>


    <!--  회원정보 변경이력  paging구현 -->
    <select id="memberModifyPageList" resultType="hashmap">
        select a.*
        from(
        select a01.memberid
            ,a01.email                 -- 이메일
            ,a01.licensegrade          -- 라이센스등급
            ,j11.codename licensegradenm
            ,j01.memberhistoryid
            ,j01.membername
            ,j01.grpname
            ,REGEXP_REPLACE(replace(j01.celltel,'-',''), '(02|.{3})(.+)(.{4})', '\\1-\\2-\\3') celltel
            ,j01.password
            ,j01.businessname
            ,j01.businessnumber
            ,concat(substring(j01.businessnumber,1,3),'-',substring(j01.businessnumber,4,2),'-',substring(j01.businessnumber,6,5)) strbusinessnumber
            ,REGEXP_REPLACE(replace(j01.companyphone,'-',''), '(02|.{3})(.+)(.{4})', '\\1-\\2-\\3') companyphone
            ,j01.companyname
            ,j01.representationname
            ,j01.taxcompanynumber
            ,concat(substring(j01.taxcompanynumber,1,3),'-',substring(j01.taxcompanynumber,4,2),'-',substring(j01.taxcompanynumber,6,5)) strtaxcompanynumber
            ,j01.taxemail
            ,j01.postnumber
            ,j01.address
            ,j01.detailaddress
            ,concat(j01.postnumber,' ',j01.address,' ',j01.detailaddress) zipaddress
            ,j01.businesscondition
            ,j01.businesskind
            ,j01.settlementmeans
            ,j12.codename settlementmeansnm
            ,j01.modifycontent
            ,j01.updateflag
            ,j01.createdAt
            ,DATE_FORMAT(j01.createdAt, '%Y-%m-%d %H:%i:%s') format_createdAt
            ,row_number() over(order by j01.createdAt desc) AS rownum
        from tbmember                   a01
            left  join tbcommoncode j11 on j11.groupcode = '001' and j11.commoncode = a01.licensegrade
            inner join tbmemberhistory  j01
            left  join tbcommoncode j12 on j12.groupcode = '009' and j12.commoncode = j01.settlementmeans
            on a01.memberid = j01.memberid
            left  join tbcommoncode       j04
            on j04.groupcode = '100'
            and j04.commoncode = a01.hostname
        where 1 = 1
        and a01.email = #{searchName}
        and a01.withdrawalyn != '1')  as a
        where 1 = 1
        <if test="firstRecordIndex !=null and lastRecordIndex != null">
            and a.rownum BETWEEN #{firstRecordIndex} AND #{lastRecordIndex}
        </if>
        order by a.createdAt desc
    </select>

    <!--  라이센스변경이력  paging구현 -->
    <select id="lienseModifyPageList" resultType="hashmap">
        select a.*
        from(
        select a01.memberid
        ,a01.membername          -- 회원명
        ,a01.email                 -- 이메일
        ,a01.licensegrade          -- 라이센스등급
        ,a01.celltel               -- 회원전화번호
        ,a01.businessname          -- 사업장명
        ,a01.businessnumber        -- 사업자등록번호
        ,j02.representationname    -- 대표자
        ,concat(substring(a01.businessnumber,1,3),'-',substring(a01.businessnumber,4,2),'-',substring(a01.businessnumber,6,5)) strbusinessnumber
        ,a01.joindate              -- 가입일자
        ,str_to_date(a01.joindate,'%Y%m%d') strjoindate
        ,a01.hostname
        ,j04.codename hostip
        ,a01.serverdomainname
        ,case when a01.withdrawalyn = '0' then '회원' when a01.withdrawalyn = '1' then '탈퇴' else '중지' end statusnm
        ,j01.licenseid
        ,j01.prelicensegrade
        ,j11.codename prelicensegradenm
        ,j01.licensegrade licensegrade2
        ,j12.codename licensegradenm
        ,concat(j01.datakeepterm,'(',j13.codename,')') datakeepterm
        ,j01.datakeepunit
        ,j01.basevolume
        ,j01.basecharge
        ,FORMAT(j01.basecharge, 0) format_basecharge
        ,j01.servicevolume
        ,j01.addvolume
        ,j01.addcharge
        ,FORMAT(j01.addcharge, 0) format_addcharge
        ,j01.modifycontent
        ,j01.createdAt
        ,DATE_FORMAT(j01.createdAt, '%Y-%m-%d %H:%i:%s') format_createdAt
        ,j01.stdate
        ,row_number() over(order by j01.stdate DESC, j01.createdAt desc) AS rownum
        from tbmember                    a01
        inner join tbmemberlicensehistory  j01
        left  join tbcommoncode j11 on j11.groupcode = '001' and j11.commoncode = j01.prelicensegrade
        left  join tbcommoncode j12 on j12.groupcode = '001' and j12.commoncode = j01.licensegrade
        left  join tbcommoncode j13 on j13.groupcode = '008' and j13.commoncode = j01.datakeepunit
        on a01.email = j01.email
        inner  join tbtaxinformation   j02
        on a01.email = j02.email
        left  join tbcommoncode       j04
        on j04.groupcode = '100'
        and j04.commoncode = a01.hostname
        where 1 = 1
        and a01.email = #{searchName}
        and a01.withdrawalyn != '1')  as a
        where 1 = 1
        <if test="firstRecordIndex !=null and lastRecordIndex != null">
            and a.rownum BETWEEN #{firstRecordIndex} AND #{lastRecordIndex}
        </if>
        order by a.stdate DESC, a.createdAt desc
    </select>

    <!--  과금내역, 세금계산서 건수  -->
    <select id="memberChargeAndTaxCount" resultType="hashmap">
        select 'charge' div, count(useyym) from tbmemberusemonth where email = #{email}  <!-- 과금건수 -->
        union all
        select 'tax' div, count(useyym) from tbtaxhistory where email = #{email}         <!-- 세금계산서 건수 -->
    </select>

    <!--  과금내역 건수  -->
    <select id="memberChargeCount" resultType="int">
        select count(useyym) from tbmemberusemonth where email = #{email}  <!-- 과금건수 -->
    </select>
    <!--  세금계산서 건수  -->
    <select id="memberTaxCount" resultType="int">
        select count(taxhistoryid)
        from tbtaxhistory
        where taxid in (select taxid
        from tbtaxinformation
        where (email, createdAt) in (select email, max(createdAt) from tbtaxinformation where email = #{email}))         <!-- 세금계산서 건수 -->
    </select>

    <!--  회원 회원정보 변경이력  건수-->
    <select id="memberModifyHisCount" resultType="int">
        select count(memberhistoryid)
        from tbmemberhistory a01
             join tbmember   j01 on j01.memberid = a01.memberid and j01.email = #{email}  <!-- 회원 회원정보 변경이력 건수 -->
    </select>

    <!--  회원 라이센스변경이력 건수 -->
    <select id="lienseModifyHisCount" resultType="int">
        select count(licenseid)
        from tbmemberlicensehistory
        where email = #{email}        <!-- 회원 라이센스변경이력 건수 -->
    </select>

    <!-- 라이센스 수정  -->
    <update id="licenseUpdate" parameterType="hashmap">
        update tbmemberlicense
        set addvolume = #{addvolume}
          ,servicevolume = #{servicevolume}
          ,addcharge = #{addcharge}
          ,datakeepterm = #{datakeepterm}
          ,datakeepunit = #{datakeepunit}
        where email = #{email}
    </update>

    <!-- 라이센스 수정  -->
    <update id="memberUpdate" parameterType="hashmap">
        update tbmember
        set serverdomainname = #{serverdomainname}
        where email = #{email}
    </update>

    <!-- netis 서버명  -->
    <select id="memberHostName" resultType="String">
        select hostname
        from tbmember
        where emial = #{email}         <!-- netis 서버명 -->
    </select>

    <!--  사용자 전체 건수 usedeviceid is null 인 경우 회원 미등록 자료 -->
    <select id="jsonUseDeviceCount" resultType="String">
        select case when a01.email is not null then IFNULL(max(usedeviceid), uuid()) else null end usedeviceid
        from tbmember a01
        join tbusedevice a02
        on a01.email = a02.userid
        and a02.useday = date_format(curdate(),'%Y%m%d')
        where 1 = 1
        and a01.email = #{userid}
    </select>
    <!--  사용자등록장비  -->
    <insert id="jsonUseDeviceInsert">
        insert into tbusedevice(
            usedeviceid     ,userid          ,useday          ,transtatus      ,info            ,
            nmscount        ,smscount        ,dbmscount       ,apcount         ,fmscount        ,
            reason                                                                              )
        values(#{usedeviceid},#{userid}      ,date_format(curdate(),'%Y%m%d'),#{transtatus},#{info},
               #{nmscount}  , #{smscount}  ,#{apcount}      ,#{dbmscount}    ,#{fmscount}     ,
               #{reason}                                                                       )
        ON DUPLICATE KEY UPDATE
            transtatus  = #{transtatus}
                              ,info        = #{info}
                              ,nmscount    = #{nmscount}
                              ,smscount    = #{smscount}
                              ,dbmscount   = #{dbmscount}
                              ,apcount     = #{apcount}
                              ,fmscount    = #{fmscount}
                              ,reason      = #{reason}
    </insert>
</mapper>