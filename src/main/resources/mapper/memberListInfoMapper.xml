<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hamonsoft.cportal.repository.MemberListInfoRepository">

    <!-- 사용자 전체리스트 조회  -->
    <select id="memberlistview" resultType="hashmap">

        select a.*
        from(
        select a01.memberid
        ,a01.membername          -- memberInfoList
        ,a01.email
        ,a01.licensegrade
        ,c01.codename  licensegradename
        ,a01.celltel
        ,a01.businessname
        ,a01.businessnumber
        ,concat(substring(a01.businessnumber,1,3),'-',substring(a01.businessnumber,4,2),'-',substring(a01.businessnumber,6)) strbusinessnumber
        ,a01.joindate
        ,str_to_date(a01.joindate,'%Y%m%d') strjoindate
        ,a01.hostname
        ,j04.codename hostip
        ,a01.serverdomainname
        ,j01.datakeepterm
        ,j01.datakeepunit
        ,j01.basevolume + j01.servicevolume + j01.addvolume totalsoluble
        ,j01.basevolume
        ,j01.basecharge
        ,j01.servicevolume
        ,j01.addvolume
        ,j01.addcharge
        ,j01.stdate
        ,j01.eddate
        ,str_to_date(j01.stdate,'%Y%m%d') strstdate
        ,str_to_date(j01.eddate,'%Y%m%d') streddate
        ,j02.postnumber
        ,j02.address
        ,j02.detailaddress
        ,concat(j02.postnumber,' ',j02.address,' ',j02.detailaddress) zipaddress
        ,j03.totalvolume
        ,j03.networkvolume
        ,j03.servervolume
        ,j03.apvolume
        ,j03.dbmsvolume
        ,j03.fmsvolume
        ,j03.totalcharge
        ,case when a01.withdrawalyn = '0' then '회원' when a01.withdrawalyn = '1' then '탈퇴' else '중지' end statusnm
        ,round(j03.totalvolume / (j01.basevolume + j01.servicevolume + j01.addvolume) * 100,2) userate
        ,row_number() over(order by a01.joindate DESC, a01.email) AS rownum
        from tbmember                      a01
        inner join tbmemberlicense    j01
        on a01.email = j01.email
        left  join tbtaxinformation   j02
        on a01.email = j02.email
        left  join tbmemberusehistory j03
        on a01.email = j03.email
        and(j03.email, j03.useday) in  (select email, max(useday) useday from tbmemberusehistory group by email)
        left  join tbcommoncode        j04
        on j04.groupcode = '100'
        and j04.commoncode = a01.hostname
        inner join tbcommoncode c01 on c01.groupcode = '001' and c01.commoncode = a01.licensegrade
        where 1 = 1
        and a01.withdrawalyn != '1'
        <choose>
            <when test="searchName != null and searchName neq ''">
                AND a01.membername like concat(#{searchName},'%')
            </when>
        </choose>
        ) as a
        where 1 = 1
        <if test="firstRecordIndex !=null and lastRecordIndex != null">
            and a.rownum BETWEEN #{firstRecordIndex} AND #{lastRecordIndex}
        </if>
        order by a.joindate DESC, a.email
    </select>


    <!--  사용자정보 조회  -->
    <select id="memberview" resultType="hashmap">
        select a01.memberid
             ,a01.membername
             ,a01.email
             ,a01.licensegrade
             ,a01.celltel
             ,a01.businessname
             ,a01.businessnumber
             ,a01.joindate
             ,str_to_date(a01.joindate,'%Y%m%d') strjoindate
            ,a01.hostname
            ,j04.codename hostip
             ,a01.serverdomainname
             ,case when a01.withdrawalyn = '0' then '회원' when a01.withdrawalyn = '1' then '탈퇴' else '중지' end statusnm
             ,j01.datakeepterm          -- 데이터보관기간
             ,j01.datakeepunit          -- 데이터보관단위(D:일,M:월,Y:년)
             ,j01.basevolume + IFNULL(j01.servicevolume,0) + IFNULL(j01.addvolume,0) totalsoluble -- 전체가용장비
             ,j01.basevolume            -- 기본장비수량
             ,j01.basecharge            -- 기본요금(라이센스요금)
             ,j01.servicevolume         -- 서비스장비수량
             ,j01.addvolume             -- 추가장비수량
             ,j01.addcharge             -- 추가라이센스요금
             ,j01.basecharge + IFNULL(j01.addcharge,0) totcharge  -- 라이센스합계금액
             ,j02.Representationname
             ,j02.businesskind
             ,j02.businesscondition
             ,j02.postnumber
             ,j02.address
             ,j02.detailaddress
             ,concat(j02.postnumber,' ',j02.address,' ',j02.detailaddress) zipaddress
             ,IFNULL(j03.totalvolume,0)   totalvolume
             ,IFNULL(j03.networkvolume,0) networkvolume
             ,IFNULL(j03.servervolume,0)  servervolume
             ,IFNULL(j03.apvolume,0)      apvolume
             ,IFNULL(j03.dbmsvolume,0)    dbmsvolume
             ,IFNULL(j03.fmsvolume,0)     fmsvolume
             ,IFNULL(j03.totalcharge,0)   totalcharge
             ,round(IFNULL(j03.totalvolume,0) / (j01.basevolume + IFNULL(j01.servicevolume,0) + IFNULL(j01.addvolume,0)) * 100,2) userate
             ,row_number() over(order by a01.joindate DESC, a01.email) AS rownum
        from tbmember                      a01
                 inner join tbmemberlicense    j01
                            on a01.email = j01.email
                 left  join tbtaxinformation   j02
                            on a01.email = j02.email
                 left  join tbmemberusehistory j03
                            on a01.email = j03.email
                                and j03.useday= (select max(useday) useday from tbmemberusehistory where email = #{strEmail})
                left  join tbcommoncode        j04
                on j04.groupcode = '100'
                and j04.commoncode = a01.hostname
        where 1 = 1
          and a01.email = #{strEmail}
          and a01.withdrawalyn != '1'
    </select>

    <!--  과금내역 정보 조회  -->
    <select id="chargelistview" resultType="hashmap">
        select a01.memberid
             ,a01.membername          -- 회원명
             ,a01.email                 -- 이메일
             ,a01.licensegrade          -- 라이센스등급
             ,a01.celltel               -- 회원전화번호
             ,a01.businessname          -- 사업장명
             ,a01.businessnumber        -- 사업자등록번호
             ,a01.joindate              -- 가입일자
             ,str_to_date(a01.joindate,'%Y%m%d') strjoindate
            ,a01.hostname
            ,j04.codename hostip
             ,a01.serverdomainname
             ,case when a01.withdrawalyn = '0' then '회원' when a01.withdrawalyn = '1' then '탈퇴' else '중지' end statusnm  -- 회원상태
             ,j01.datakeepterm          -- 데이터보관기간
             ,j01.datakeepunit          -- 데이터보관단위(D:일,M:월,Y:년)
             ,concat(j01.datakeepterm,'(',if(j01.datakeepunit='D','일',if(j01.datakeepunit='M','월', '년')),')') datakeepnm
             ,j01.basevolume + IFNULL(j01.servicevolume,0) + IFNULL(j01.addvolume,0) totalsoluble -- 전체가용장비
             ,j01.basevolume            -- 기본장비수량
             ,j01.basecharge            -- 기본요금(라이센스요금)
             ,j01.servicevolume         -- 서비스장비수량
             ,j01.addvolume             -- 추가장비수량
             ,j01.addcharge             -- 추가라이센스요금
             ,j01.basecharge + IFNULL(j01.addcharge,0) totcharge  -- 라이센스합계금액
             ,j02.Representationname    -- 대표자
             ,j02.businesskind          -- 업태
             ,j02.businesscondition     -- 업종
             ,j02.postnumber            -- 우편번호
             ,j02.address               -- 주소
             ,j02.detailaddress         -- 상세주소
             ,concat(j02.postnumber,' ',j02.address,' ',j02.detailaddress) zipaddress
             ,j03.useyym                  useyym
             ,IFNULL(j03.totalvolume,0)   totalvolume
             ,IFNULL(j03.networkvolume,0) networkvolume
             ,IFNULL(j03.servervolume,0)  servervolume
             ,IFNULL(j03.apvolume,0)      apvolume
             ,IFNULL(j03.dbmsvolume,0)    dbmsvolume
             ,IFNULL(j03.fmsvolume,0)     fmsvolume
             ,IFNULL(j03.totalcharge,0)   totalcharge
             ,round(IFNULL(j03.totalvolume,0) / (j01.basevolume + IFNULL(j01.servicevolume,0) + IFNULL(j01.addvolume,0)) * 100,2) userate
             ,row_number() over(order by j03.useyym DESC) AS rownum
        from tbmember                      a01
                 inner join tbmemberlicense    j01
                            on a01.email = j01.email
                 inner  join tbtaxinformation   j02
                             on a01.email = j02.email
                 inner  join tbmemberusemonth j03
                             on a01.email = j03.email
                left  join tbcommoncode        j04
                on j04.groupcode = '100'
                and j04.commoncode = a01.hostname
        where 1 = 1
          and a01.email = #{email}
          and a01.withdrawalyn != '1'
        order by j03.useyym DESC
    </select>


    <!--  세금계산서 내역 정보 조회  -->
    <select id="taxlistview" resultType="hashmap">
        select a01.memberid
              ,a01.membername          -- 회원명
             ,a01.email                 -- 이메일
             ,a01.licensegrade          -- 라이센스등급
             ,a01.celltel               -- 회원전화번호
             ,a01.businessname          -- 사업장명
             ,a01.businessnumber        -- 사업자등록번호
             ,a01.joindate              -- 가입일자
             ,str_to_date(a01.joindate,'%Y%m%d') strjoindate
            ,a01.hostname
            ,j04.codename hostip
             ,a01.serverdomainname
             ,case when a01.withdrawalyn = '0' then '회원' when a01.withdrawalyn = '1' then '탈퇴' else '중지' end statusnm
             ,j01.taxhistoryid          -- 세금계산서발행내역
             ,j01.taxid                 -- 세금계산서발행기관정보
             ,j01.issueamount           -- 발행금액
             ,j01.issuedate             -- 발행일자
             ,str_to_date(j01.issuedate,'%Y%m%d') strissuedate
             ,j02.representationname    -- 대표자
             ,j02.businesskind          -- 업태
             ,j02.businesscondition     -- 업종
             ,j02.postnumber            -- 우편번호
             ,j02.address               -- 주소
             ,j02.detailaddress         -- 상세주소
             ,concat(j02.postnumber,' ',j02.address,' ',j02.detailaddress) zipaddress
             ,j01.createdAt
             ,row_number() over(order by j01.issuedate DESC, j01.createdAt desc) AS rownum
        from tbmember                    a01
                 inner join tbtaxinformation j02
                         inner join tbtaxhistory     j01
                                    on j02.taxid = j01.taxid
                         on a01.email = j02.email
                left  join tbcommoncode        j04
                on j04.groupcode = '100'
                and j04.commoncode = a01.hostname
        where 1 = 1
          and a01.email = #{strEmail}
          and a01.withdrawalyn != '1'
        order by j01.issuedate DESC, j01.createdAt desc
    </select>


</mapper>