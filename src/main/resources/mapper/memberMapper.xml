<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.hamonsoft.cportal.repository.MemberRepository">

	<select id="getTime" resultType="string">
		select now()
	</select>
	
	<insert id="insertMember" >
		insert into tbmember(
			email          ,membername       ,grpname          ,celltel        ,password
			,businessname   ,businessnumber   ,licensegrade     ,companyphone   ,emailcertificationyn
			,withdrawalyn   ,withdrawaldate   ,joindate         ,createdAt      ,updatedBy
		    ,updatedAt      ,administratoryn
		)values(
			#{email}       ,#{membername}    ,#{grpname}       ,#{celltel}     ,sha2(#{password}, 256)
			,#{businessname},#{businessnumber},#{licensegrade}  ,#{companyphone},#{emailcertificationyn}
			,#{withdrawalyn},#{withdrawaldate},DATE_FORMAT(now(),'%Y%m%d')      ,now()    ,#{email}
		    ,now()
		    ,(select case when infomalityname = #{businessnumber} then 'Y' else 'N' end from tbcommoncode where groupcode = '000000' and commoncode = '999')
		)
	</insert>

	<insert id="insertTaxInfomation" >
		insert into tbtaxinformation (
			taxid             , email        , Representationname   , taxcompanynumber    , taxemail
			,postnumber        , address      , detailaddress        , businesscondition   , businesskind
			,settlementmeans   , baseamount   , customer_uid         , next_pay_date       , paid_amount
			,createdAt         , updatedBy    , updatedAt
		)values(
			uuid()            , #{email}     , #{representationname}, #{taxcompanynumber} , #{taxemail}
			,#{postnumber}     , #{address}   , #{detailaddress}     , #{businesscondition}, #{businesskind}
			,#{settlementmeans}, #{baseamount}, #{customer_uid}      , #{next_pay_date}    , #{paid_amount}
			,now()             , #{updatedBy} , now()
		)
	</insert>

	<insert id="insertAuthentication" >
		insert into tbauthentication (
		      authenticationid, email   , agreeyn   , createdAt
		)values(
		      uuid()          , #{email}, #{agreeyn}, now())
	</insert>

	<insert id="insertMemberLicense" >
		insert into tbmemberlicense (
			email   , licensegrade   , datakeepterm   , datakeepunit   , basevolume   , addcharge , updatedBy)
		select #{email}, #{licensegrade}
			,case when commoncode = 1 then SUBSTRING_INDEX(freeaid , '일', 1)
			when commoncode = 2 then SUBSTRING_INDEX(basicaid, '일', 1)
			when commoncode = 3 then SUBSTRING_INDEX(proaid  , '일', 1) else 30 end datakeepterm
			,'D'  datakeepterm
			,a02.applyvolume, a02.basecharge, #{email}
		from tbaidfunction as a01
			,(select commoncode, applyvolume
			,case when baselicense = '무료'   then 0
			when baselicense = '별도협의' then 0
			else CAST(baselicense AS UNSIGNED)
			end basecharge
			from tbcommoncode
			where groupcode  = '001'
			and commoncode = #{licensegrade}) as a02
		where a01.solutioncode = '10'
		and a01.functionno   = '11'
	</insert>

	<select id="selectMember" resultType="com.hamonsoft.cportal.domain.Member">
		select * from tbmember
		where email=#{email}
	</select>

	<select id="selectTaxByEmail" resultType="Map">
		select customer_uid, DATE_FORMAT(next_pay_date,'%Y-%m-%d %H:%i:%s') as next_pay_date, paid_amount from tbtaxinformation
		where email=#{email}
	</select>

	<select id="taxInfo" resultType="TaxInformation">
		select email, companyname, representationname, taxcompanynumber, taxemail, address, detailaddress, businesskind, settlementmeans, businesscondition, paid_amount, customer_uid, DATE_FORMAT(updatedAt,'%Y-%m-%d %H:%i:%s') as updatedAt
		from tbtaxinformation
		where email=#{email}
	</select>

	<select id="selectBaseLicense" resultType="HashMap">
		select
			commoncode, baselicense
		from tbcommoncode
		where groupcode = '001'
	</select>

	<select id="selectEmails" resultType="HashMap">
		select email, settlementmeans
		from tbtaxinformation
	</select>

	<select id="selectSettlementmeans" resultType="String">
		select settlementmeans
		from tbtaxinformation
		where email=#{email}
	</select>


	<update id="updatePayInformation">
		update tbtaxinformation set next_pay_date = #{dtNext}, imp_uid = #{imp_uid}, last_pay_date = now(), updatedAt = now()
		where email=#{email}
	</update>

	<insert id="insertPayHistory">
		insert into tbpayhistory(payhistoryid, email, customer_uid, imp_uid, paid_amount) values
			(uuid(), #{email}, #{customer_uid}, #{imp_uid}, #{paid_amount})
	</insert>

	<select id="listAll" resultType="Member">
        <![CDATA[
		select
			email,membername,celltel,password,businessname,businessnumber,licensegrade,companyphone,emailcertificationyn,withdrawalyn,withdrawaldate,joindate,createdAt,updatedBy,updatedAt
		from tbmember
		]]>
    </select>

	<select id="findAll" resultType="HashMap">
		select
			email,membername,celltel,businessname,licensegrade
		from tbmember
    </select>

	<select id="getIpAddress" resultType="HashMap">
		select
			codename as ipAddress
		from tbcommoncode
		where groupcode = '100' and commoncode=#{uuid}
	</select>

	<select id="login" resultType="Member">
		select * from tbmember
		where email=#{uid} and password=sha2(#{upw}, 256) and emailcertificationyn = 1 and withdrawalyn != '1'
	</select>

	<update id="keepLogin">
		update tbmember set sessionkey = #{sessionId}, sessionlimit = #{next}
		where email = #{uid}
	</update>

	<select id="checkUserWithSessionKey" resultType="Member">
		select * from tbmember
		where sessionKey = #{value} and sessionlimit > now()
	</select>

	<select id="fineId" resultType="string">
		select email from tbmember
		where membername = #{membername} and celltel = #{celltel}
	</select>

	<update id="updatePw">
		update tbmember set password=sha2(#{pw}, 256)
		where membername = #{membername} and celltel = #{celltel} and email = #{email}
	</update>

	<update id="emailcertification">
		update tbmember set emailcertificationyn = 1, withdrawalyn = '0'
		where email = #{email}
	</update>

	<select id="existsEmail" resultType="int">
		select count(*) cnt from tbmember
		where email = #{email}
	</select>

</mapper>